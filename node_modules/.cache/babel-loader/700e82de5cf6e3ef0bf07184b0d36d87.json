{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\n\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n    // ========= remove item ========\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n    //============ delete item ===========\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalQuantity","totalAmount","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","removeItem","filter","deleteItem","cartActions","actions"],"sources":["C:/Users/Dell/Desktop/Jimmy/food-delivery-ecommerce-main/src/store/shopping-cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartItems: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(\n        (item) => item.id === newItem.id\n      );\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\n\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice =\n          Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n\n        0\n      );\n    },\n\n    // ========= remove item ========\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find((item) => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice =\n          Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n    },\n\n    //============ delete item ===========\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find((item) => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}