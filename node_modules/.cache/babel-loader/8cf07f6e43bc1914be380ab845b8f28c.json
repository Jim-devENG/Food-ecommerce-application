{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const initialState={cartItems:[],totalQuantity:0,totalAmount:0};const cartSlice=createSlice({name:\"cart\",initialState,reducers:{// =========== add item ============\naddItem(state,action){const newItem=action.payload;const existingItem=state.cartItems.find(item=>item.id===newItem.id);state.totalQuantity++;if(!existingItem){// ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\nstate.cartItems.push({id:newItem.id,title:newItem.title,image01:newItem.image01,price:newItem.price,quantity:1,totalPrice:newItem.price});}else{existingItem.quantity++;existingItem.totalPrice=Number(existingItem.totalPrice)+Number(newItem.price);}state.totalAmount=state.cartItems.reduce((total,item)=>total+Number(item.price)*Number(item.quantity),0);},// ========= remove item ========\nremoveItem(state,action){const id=action.payload;const existingItem=state.cartItems.find(item=>item.id===id);state.totalQuantity--;if(existingItem.quantity===1){state.cartItems=state.cartItems.filter(item=>item.id!==id);}else{existingItem.quantity--;existingItem.totalPrice=Number(existingItem.totalPrice)-Number(existingItem.price);}state.totalAmount=state.cartItems.reduce((total,item)=>total+Number(item.price)*Number(item.quantity),0);},//============ delete item ===========\ndeleteItem(state,action){const id=action.payload;const existingItem=state.cartItems.find(item=>item.id===id);if(existingItem){state.cartItems=state.cartItems.filter(item=>item.id!==id);state.totalQuantity=state.totalQuantity-existingItem.quantity;}state.totalAmount=state.cartItems.reduce((total,item)=>total+Number(item.price)*Number(item.quantity),0);}}});export const cartActions=cartSlice.actions;export default cartSlice;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalQuantity","totalAmount","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","removeItem","filter","deleteItem","cartActions","actions"],"sources":["C:/Users/Dell/Desktop/Jimmy/food-delivery-ecommerce-main/src/store/shopping-cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartItems: [],\n  totalQuantity: 0,\n  totalAmount: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(\n        (item) => item.id === newItem.id\n      );\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\n\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice =\n          Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n\n        0\n      );\n    },\n\n    // ========= remove item ========\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find((item) => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice =\n          Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n    },\n\n    //============ delete item ===========\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find((item) => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}